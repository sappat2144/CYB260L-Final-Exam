AWSTemplateFormatVersion: "2010-09-09"
Description: >
  CloudFormation template to create a VPC in two Availability Zones with
  two public and two private subnets.

# Parameters allow customization of the template when launching
Parameters:
  StudentID:
    Type: String
    Description: "Enter your ECPI student ID to personalize the VPC name."

# Resource section where AWS infrastructure is defined
Resources:

  # Create a VPC with DNS support and a dynamic name based on StudentID
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"  # Define the IP range for the VPC
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: !Sub "VPC-${StudentID}"

  # Public Subnet 1 in AZ1
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "10.0.1.0/24"  # Assign a smaller IP range for this subnet
      AvailabilityZone: "us-west-2a"
      MapPublicIpOnLaunch: true  # Ensures instances launched here get public IPs
      Tags:
        - Key: "Name"
          Value: !Sub "PublicSubnet1-${StudentID}"

  # Public Subnet 2 in AZ2
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "10.0.2.0/24"
      AvailabilityZone: "us-west-2b"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: !Sub "PublicSubnet2-${StudentID}"

  # Private Subnet 1 in AZ1
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "10.0.3.0/24"
      AvailabilityZone: "us-west-2a"
      MapPublicIpOnLaunch: false  # Private subnet, so no public IPs assigned
      Tags:
        - Key: "Name"
          Value: !Sub "PrivateSubnet1-${StudentID}"

  # Private Subnet 2 in AZ2
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "10.0.4.0/24"
      AvailabilityZone: "us-west-2b"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value: !Sub "PrivateSubnet2-${StudentID}"

  # Internet Gateway for Public Subnets
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub "InternetGateway-${StudentID}"

  # Attach Internet Gateway to the VPC
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  # Public Route Table for Internet Access
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: "Name"
          Value: !Sub "PublicRouteTable-${StudentID}"

  # Public Route to allow internet traffic
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"  # Default route for internet access
      GatewayId: !Ref InternetGateway

  # Associate Public Subnet 1 with Public Route Table
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  # Associate Public Subnet 2 with Public Route Table
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # Private Route Table for Private Subnets
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: "Name"
          Value: !Sub "PrivateRouteTable-${StudentID}"

  # Associate Private Subnet 1 with Private Route Table
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  # Associate Private Subnet 2 with Private Route Table
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VPCId:
    Description: "The ID of the created VPC"
    Value: !Ref MyVPC

  PublicSubnet1Id:
    Description: "The ID of Public Subnet 1"
    Value: !Ref PublicSubnet1

  PublicSubnet2Id:
    Description: "The ID of Public Subnet 2"
    Value: !Ref PublicSubnet2

  PrivateSubnet1Id:
    Description: "The ID of Private Subnet 1"
    Value: !Ref PrivateSubnet1

  PrivateSubnet2Id:
    Description: "The ID of Private Subnet 2"
    Value: !Ref PrivateSubnet2